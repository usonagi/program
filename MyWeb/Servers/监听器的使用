监听器是一个实现了特定接口的Java类，这个Java类用于监听另一个Java的方法调用或者属性的改变。

用途：主要应用在图形化开发界面。

=====演示：web-01/com.listener.uilistener/MyFrame

事件源：指的是被监听的对象
监听器：指的是监听的对象
事件源和监听器绑定：事件源调用相应的类
事件：指的是事件源对象的改变。--主要用来获得事件源对象。


Servlet 中的监听器
	事件源：ServletContext、HttpSession、ServletRequest。
	
Servlet中的监听器分类		======演示：web-01/com.listener/weblistener
	1、监听三个域对象的创建和销毁的监听器(3个)
	2、监听三个域对象的属性变更(属性添加、移除、替换)的监听器(3个)
	3、监听HttpSession中JavaBean的状态改变(钝化、活化、绑定、解除绑定)的监听器(2个)
	
ServletContextListener监听器
	作用：用来监听ServletContext域对象的创建和销毁。
	ServletContext创建和销毁：在服务器启动时，为每个web应用单独创建ServletContext对象；在服务器关闭时，或项目从web服务器移除时销毁。
	监听ServletContext的创建：void contextInitional(ServletContextEvent sce)
	监听ServletContext的销毁：void contextDestoryed(ServletContextEvent sce)
	用途：加载框架的配置文件(Spring框架核心监听器ContextLoaderListener)、定时任务调度
	
HttpSessionListener监听器	访问html、Servlet(默认不会调用getSession)不会创建session，访问jsp会创建session
	作用：用来监听HttpSession对象的创建和销毁
	HttpSession的创建和销毁：服务器端第一次调用getSession()方法时创建；非正常关闭服务器、Session过期(默认30分钟)、手动调用session.invalidate()时销毁
	监听HttpSession的创建：void sessionCreated(HttpSessionEvent se)
	监听HttpSession的销毁：void sessionDestroyed(HttpSessionEvent se)
	
ServletRequestListener监听器		访问HTML、Servlet、JSP都是一次请求，即都会创建request对象
	作用：监听ServletRequest对象的创建和销毁。
	ServletRequest对象的创建和销毁：从客户端向服务器发送一次请求，服务器就会创建request对象。服务器对此次请求做出响应后，request对象就会销毁。
	监听ServletRequest的创建：void requestInitialized(ServletRequestEvent sre)
	监听ServletRequest的销毁：void requestDestroyed(ServletRequestEvent sre)
	
=====在线人数案例  演示web-01/com.onlinecount



监听三个域对象属性变更的监听器		=====演示HttpSessionAttributeListener  web-01/com.listener.weblistener
	ServletContextAttributeListener：监听ServletContext对象中属性变更(属性添加、移除、替换)的监听器
	HttpSessionAttributeListener：	 监听HttpSession对象中属性变更(属性添加、移除、替换)的监听器
	ServletRequestAttributeListener：监听ServletRequest对象中属性变更(属性添加、移除、替换)的监听器


监听HttpSession中Java类状态改变的监听器
	保存在session域中的java类可以有多种状态：绑定到session中，从session中解除绑定，随session持久化到一个存储设备(钝化)；随session从一个存储设备中恢复(活化)。
	Servlet对象中定义了两个特殊的监听器接口帮助java类了解自己在session域中的状态：HttpSessionBindingListener、HttpSessionActiveListener实现这两个接口的类不需要在web.xml中进行配置。
	
	HttpSessionBindingListener监听器：监听java类在HttpSession中的绑定和解除绑定的状态。
	HttpSessionActiveListener监听器：监听HttpSession中Java类的钝化和活化。钝化和活化相当于序列化和反序列化。
	
	配置完成session的序列化和反序列化：context标签可以配置在
	工程/META-INF/context.xml	:当前工程才会序列化session
	Tomcat/config/context.xml	:所有tomcat下虚拟主机和虚拟目录下的工程都会序列化session
	Tomcat/config/catalina/localhost/context.xml :localhost虚拟主机下的所有项目会序列化session
